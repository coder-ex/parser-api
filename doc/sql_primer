### SQL пример
SELECT SUM(`totalPrice`) FROM `wb_panfilov_sales` WHERE `wb_id` = '42a3fab5-bee1-53e1-b2c1-aed0efd52fd0' AND `Date` BETWEEN '2022-02-01 00:00:00' AND '2022-02-28 23:59:59';

---> повторы
select posting_number, count(*) from ozon_aqua_fbo_lists group by posting_number HAVING count(*) > 1

---> повторы по 2-м полям
select "campaign_id", "date", count(*) from ozon_aqua_statistics_daily group by campaign_id, date HAVING count(*) > 1

---> не содержит по фильтру жрет много ресурсов
select "supplierArticle" from wb_kulemina_incomes where "supplierArticle" not in( SELECT "supplierArticle" FROM wb_kulemina_incomes WHERE "supplierArticle" Like 'supplierArticle%' )

---> не содержит по фильтру вроде норм
select "supplierArticle" from wb_kulemina_stocks where "supplierArticle" not Like 'supplierArticle%'

---> сумма по связанным таблицам с запросами where betwin like
SELECT SUM(`ozon_aqua_products`.`quantity`) FROM `ozon_aqua_fbo_lists` INNER JOIN `ozon_aqua_products` ON (`ozon_aqua_fbo_lists`.`id`=`ozon_aqua_products`.`fk_product_id`) WHERE `ozon_aqua_fbo_lists`.`created_at` BETWEEN "2022-09-01" AND "2022-09-28" AND `ozon_aqua_products`.`offer_id`="140928" AND `ozon_aqua_products`.`name` LIKE "%Aqua Reef AN-200%";

### запросы к БД
---> получение аггрегированных данных по связям
$res = DB::connection('pgsql')->table('export_services')->where('name', 'ae')->join('export_tasks', 'export_services.id', '=', 'export_tasks.service_id')->where('task', 'projects')->first()

---> При обновлении JSON-столбцов используйте синтаксис -> для обращения к нужному ключу в JSON-объекте. Эта операция поддерживается только в БД, поддерживающих JSON-столбцы

---> обновление (поля в json можно достать через ->)
$res = DB::connection('pgsql')->table('export_tasks')->where('id', $res->id)->update(['extended_fields->limit'=>10000, 'start_time'=>'00:00'])

---> вставка так же как обновление только через insert

### postgres права (шпаргалка https://iie52.ru/postgresql-how-to-grant-access-to-user/)
GRANT USAGE ON SCHEMA public TO u115241_powerbi; // Права на использование схемы:
GRANT CONNECT ON DATABASE u115241_test_ba TO u115241_powerbi; // Права на подключение к базе данных:
GRANT ALL PRIVILEGES ON DATABASE u115241_test_ba TO u115241_powerbi; // Все права на базу данных
ALTER USER u115241_powerbi CREATEDB; // Права на создание базы данных
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO u115241_powerbi; // Все права на таблицы:
ALTER DEFAULT PRIVILEGES
FOR USER u115241_powerbi
IN SCHEMA public
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO u115241_powerbi;  // на вновь создаваемые таблицы

---> Для подключения к базе данных PostgreSQL можно использовать команду:
psql -U<USERNAME> -h<HOSTNAME> -d<DB_NAME>
вход с консоли psql -h 127.0.0.1 -U r115241 -d postgres
